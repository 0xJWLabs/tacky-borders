{
  "$schema": "https://raw.githubusercontent.com/GlazeBar/tacky-borders/refs/heads/main/schema.json",
  "global": {
    // border_width: Defines the width of the window border in pixels.
    "border_width": 2,
    // border_offset: Adjusts the border position by shrinking or expanding it relative to the window.
    //   - Negative values shrink the border inward, effectively reducing the visible border size.
    //   - Positive values expand the border outward.
    // Example: -1 slightly reduces the border’s coverage.
    "border_offset": -1,
    // border_style: Sets a custom radius for the window border’s rounded corners.
    //   - Use -1 to let the application automatically determine the radius.
    //   - Any positive value applies a fixed radius in pixels to the window corners.
    //   - You can also use predefined options in Enum format:
    //     - "Auto": Automatically calculates the radius based on the window's dimensions.
    //     - "Round": Applies a fully rounded corner with a predefined value.
    //     - "SmallRound": Applies a smaller rounded corner with a predefined value.
    //     - "Square": Applies square corners (no rounding).
    // Example: 5 will apply a 5-pixel radius to the corners.
    // Example of Enum usage:
    //   border_style: "Round"
    "border_style": "Auto",
    // active_color: Defines the color properties for the active window border.
    //   - Can be specified as either a string (e.g., "#RRGGBB") or a map format.
    //   - If using a map, provide colors in various formats: #RRGGBB, #RRGGBBAA, rgb(...), or rgba(...).
    //     - colors: A list of color values to define the active border colors.
    //     - direction: Specifies the start and end points of a linear gradient for the border.
    //       - Format:
    //         start: [x, y]  // Start point of the gradient (normalized coordinates).
    //         end: [x, y] // End point of the gradient (normalized coordinates).
    //   - Example of a string: active_color: "#ff0000"
    //   - Example of a gradient map:
    //     active_color:
    //       colors: ["#89b4fa", "#cba6f7"]
    //       direction:
    //         start: [0.0, 0.0]
    //         end: [1.0, 0.0]
    "active_color": {
      "colors": [
        "#000000",
        "#ffffff"
      ],
      "direction": {
        "start": [
          0.0,
          0.0
        ],
        "end": [
          1.0,
          0.0
        ]
      }
    },
    //   - This can also be specified as a string or a gradient map, similar to active_color.
    "inactive_color": "#d2d2d2",
    // animations: Defines the animation properties for the window border.
    //   - active: Specifies animations for the active window border. This can be defined in multiple formats:
    //     - As a map with animation names as keys and optional settings for duration and easing (e.g., `{ Spiral: { duration: 1800ms, easing: linear }, Fade }`).
    //     - As a simple list of animation types (e.g., `{ Spiral, Fade }`), where default settings are applied for each animation.
    //     - As a list where each animation type can also include a string specifying easing and duration (e.g., `{ Spiral: "ease-in-out 300ms", Fade: "linear 500ms" }`).
    //   - inactive: Specifies animations for the inactive window border. Similar to `active`, this can be defined as:
    //     - A map with animation names and optional properties (e.g., `{ Fade: { easing: "cubic-bezier(0.42, 0.0, 0.58, 1.0)" } }`).
    //     - A simple list of animation types (e.g., `{ Fade }`).
    //   - fps: Defines the frames per second for the animations (default: 60).
    "animations": {
      "active": {
        "spiral": "cubic-bezier(0.42, 0.0, 0.58, 1.0) 1800ms",
        "fade": {
          "duration": "450ms",
          "easing": "EaseInOut"
        }
      },
      "inactive": {
        "reverse_spiral": "ease-in-out 1800ms",
        "fade": null
      },
      "fps": 60
    },
    // initialize_delay: The initial delay (in milliseconds) before applying animations when the window is first rendered. 
    //             A reduced delay can be used to account for animations like fade, which take additional time.
    // unminimize_delay: The delay (in milliseconds) before applying animations when a minimized window is restored.
    "initialize_delay": 150,
    "unminimize_delay": 100
  },
  // window_rules: Defines specific window matching rules for borders.
  // Each rule can define custom properties for how borders are applied to matching windows.
  // The properties defined in window_rules can either inherit from the global settings or be overridden by the rule.
  "window_rules": [
    {
      // Match Strategies:
      // kind: Specifies the type of property to match.
      // - Process: Matches based on the process name.
      // - Title: Matches based on the window title.
      // - Class: Matches based on the window's class name.
      // strategy (default: Equals):
      // - "Equals": The match value must be exactly equal to the specified value.
      // - "Regex": The match value must match the specified regular expression.
      // - "Contains": The match value must be a substring of the specified string.
      // value:
      // - Specifies the value against which the window's properties are matched.
      // - Can be a string that must either match exactly, be a substring, or conform to a regex pattern
      //   depending on the specified match strategy.
      // border_enabled (default: true):
      // - A boolean value indicating whether the border is enabled for this particular rule.
      // - If true, the defined border properties (such as color and thickness) will apply to matching windows.
      // - If false, no border will be applied, effectively disabling it for that rule.
      "match": {
        "kind": "Class",
        "value": "Windows.UI.Core.CoreWindow",
        "strategy": "Contains",
        "enabled": false
      }
    },
    {
      "match": {
        "kind": "Process",
        "value": "(?i)^Flow.*",
        "strategy": "Regex",
        "enabled": false
      }
    },
    {
      "match": {
        "kind": "Title",
        "value": "Zebar",
        "strategy": "Equals",
        "enabled": false
      }
    }
  ]
}
