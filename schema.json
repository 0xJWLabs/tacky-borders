{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "UserConfig",
  "description": "Stores the complete configuration including global rules, window rules, and keybindings.",
  "type": "object",
  "properties": {
    "global": {
      "description": "Global settings applied across all windows.",
      "$ref": "#/$defs/GlobalRuleConfig"
    },
    "keybindings": {
      "description": "Application keybindings.",
      "$ref": "#/$defs/Keybindings"
    },
    "monitor_config_changes": {
      "description": "Enables monitoring for changes in the configuration file.",
      "type": "boolean",
      "default": false
    },
    "theme": {
      "description": "Enable custom predefined theme",
      "type": [
        "string",
        "null"
      ],
      "default": null
    },
    "window_rules": {
      "description": "Specific rules for individual windows.",
      "type": "array",
      "items": {
        "$ref": "#/$defs/WindowRuleConfig"
      }
    }
  },
  "$defs": {
    "Alias": {
      "anyOf": [
        {
          "required": [
            "init_delay",
            "initialize_delay"
          ]
        },
        {
          "required": [
            "unminimize_delay",
            "restore_delay"
          ]
        }
      ]
    },
    "AnimationConfig": {
      "type": "object",
      "properties": {
        "duration": {
          "anyOf": [
            {
              "$ref": "#/$defs/Duration"
            },
            {
              "type": "null"
            }
          ]
        },
        "easing": {
          "anyOf": [
            {
              "$ref": "#/$defs/AnimationEasing"
            },
            {
              "type": "null"
            }
          ]
        },
        "kind": {
          "$ref": "#/$defs/AnimationKind"
        }
      },
      "required": [
        "kind"
      ]
    },
    "AnimationsConfig": {
      "type": "object",
      "properties": {
        "active": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/$defs/AnimationConfig"
          }
        },
        "fps": {
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "inactive": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/$defs/AnimationConfig"
          }
        }
      }
    },
    "AnimationEasing": {
      "description": "Defines the easing function for animations, which can be a predefined easing type or a custom cubic-bezier function. Predefined easings include common animation curves such as 'ease-in', 'ease-out', and their variations, supporting multiple naming conventions (e.g., camelCase, kebab-case, snake_case, and PascalCase). Custom cubic-bezier functions allow precise control over the animation timing curve.",
      "oneOf": [
        {
          "type": "string",
          "description": "A predefined easing type, such as 'ease-in', 'ease-out', or their variations in different naming conventions.",
          "enum": [
            "linear",
            "Linear",
            "EaseIn",
            "EaseInSine",
            "EaseInQuad",
            "EaseInCubic",
            "EaseInQuart",
            "EaseInQuint",
            "EaseInExpo",
            "EaseInCirc",
            "EaseInBack",
            "EaseOut",
            "EaseOutSine",
            "EaseOutQuad",
            "EaseOutCubic",
            "EaseOutQuart",
            "EaseOutQuint",
            "EaseOutExpo",
            "EaseOutCirc",
            "EaseOutBack",
            "EaseInOut",
            "EaseInOutSine",
            "EaseInOutQuad",
            "EaseInOutCubic",
            "EaseInOutQuart",
            "EaseInOutQuint",
            "EaseInOutExpo",
            "EaseInOutCirc",
            "EaseInOutBack",
            "ease-in",
            "ease-in-sine",
            "ease-in-quad",
            "ease-in-cubic",
            "ease-in-quart",
            "ease-in-quint",
            "ease-in-expo",
            "ease-in-circ",
            "ease-in-back",
            "ease-out",
            "ease-out-sine",
            "ease-out-quad",
            "ease-out-cubic",
            "ease-out-quart",
            "ease-out-quint",
            "ease-out-expo",
            "ease-out-circ",
            "ease-out-back",
            "ease-in-out",
            "ease-in-out-sine",
            "ease-in-out-quad",
            "ease-in-out-cubic",
            "ease-in-out-quart",
            "ease-in-out-quint",
            "ease-in-out-expo",
            "ease-in-out-circ",
            "ease-in-out-back",
            "easeIn",
            "easeInSine",
            "easeInQuad",
            "easeInCubic",
            "easeInQuart",
            "easeInQuint",
            "easeInExpo",
            "easeInCirc",
            "easeInBack",
            "easeOut",
            "easeOutSine",
            "easeOutQuad",
            "easeOutCubic",
            "easeOutQuart",
            "easeOutQuint",
            "easeOutExpo",
            "easeOutCirc",
            "easeOutBack",
            "easeInOut",
            "easeInOutSine",
            "easeInOutQuad",
            "easeInOutCubic",
            "easeInOutQuart",
            "easeInOutQuint",
            "easeInOutExpo",
            "easeInOutCirc",
            "easeInOutBack",
            "ease_in",
            "ease_in_sine",
            "ease_in_quad",
            "ease_in_cubic",
            "ease_in_quart",
            "ease_in_quint",
            "ease_in_expo",
            "ease_in_circ",
            "ease_in_back",
            "ease_out",
            "ease_out_sine",
            "ease_out_quad",
            "ease_out_cubic",
            "ease_out_quart",
            "ease_out_quint",
            "ease_out_expo",
            "ease_out_circ",
            "ease_out_back",
            "ease_in_out",
            "ease_in_out_sine",
            "ease_in_out_quad",
            "ease_in_out_cubic",
            "ease_in_out_quart",
            "ease_in_out_quint",
            "ease_in_out_expo",
            "ease_in_out_circ",
            "ease_in_out_back"
          ]
        },
        {
          "type": "string",
          "pattern": "^[Cc][Uu][Bb][Ii][Cc][-_]?[Bb][Ee][Zz][Ii][Ee][Rr]\\([0-9\\s.,]+\\)$",
          "description": "A cubic-bezier function, e.g., cubic-bezier(0.42, 0.0, 0.58, 1.0)."
        }
      ]
    },
    "AnimationKind": {
      "description": "Represents an animation kind",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "fade",
            "Fade"
          ],
          "description": "A fade animation where the element gradually appears or disappears."
        },
        {
          "type": "string",
          "enum": [
            "spiral",
            "Spiral"
          ],
          "description": "A spiral animation where the element moves in a circular path."
        },
        {
          "type": "string",
          "enum": [
            "reversespiral",
            "reverse-spiral",
            "reverse_spiral",
            "ReverseSpiral",
            "Reverse-Spiral",
            "Reverse_Spiral"
          ],
          "description": "A reverse spiral animation where the element moves in a circular path counter to the usual direction."
        }
      ]
    },
    "BorderOffset": {
      "description": "Defines options for border offset customization",
      "oneOf": [
        {
          "type": "integer",
          "format": "int32",
          "description": "An integer representing the border offset in pixels. Positive values expand the border, negative values shrink it."
        },
        {
          "type": "string",
          "pattern": "^-?\\d+(px)?$",
          "description": "A string representing the border offset in pixels with a 'px' suffix (e.g., '5px' or '-5px'). Positive values expand, negative values shrink the border."
        }
      ]
    },
    "BorderWidth": {
      "description": "Defines options for border width customization",
      "oneOf": [
        {
          "type": "integer",
          "format": "int32",
          "description": "An integer representing the border width in pixels. Positive values expand the border, negative values shrink it."
        },
        {
          "type": "string",
          "pattern": "^-?\\d+(px)?$",
          "description": "A string representing the border width in pixels with a 'px' suffix (e.g., '5px' or '-5px'). Positive values expand, negative values shrink the border."
        }
      ]
    },
    "BorderStyle": {
      "description": "Defines options for border radius customization.",
      "oneOf": [
        {
          "description": "Fully rounded borders.",
          "type": "string",
          "enum": [
            "Round",
            "round"
          ]
        },
        {
          "description": "Square borders with no rounding.",
          "type": "string",
          "enum": [
            "Square",
            "square"
          ]
        },
        {
          "description": "Small rounding for subtle border effects.",
          "type": "string",
          "enum": [
            "SmallRound",
            "smallround",
            "small_round",
            "small-round"
          ]
        },
        {
          "description": "Automatically determine the border radius based on context.",
          "type": "string",
          "enum": [
            "Auto",
            "auto"
          ]
        },
        {
          "type": "string",
          "pattern": "^[Rr]adius\\([-+]?[0-9]*\\.?[0-9]+(?:px)?\\)$",
          "description": "Custom border radius specified as a number, optionally followed by 'px'."
        }
      ]
    },
    "ColorMapping": {
      "description": "A structure that defines a gradient mapping, which contains a list of color stops and a direction.",
      "type": "object",
      "properties": {
        "colors": {
          "description": "A list of colors in the gradient, represented as hexadecimal color strings.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "direction": {
          "description": "The direction of the gradient, represented as a `GradientDirection`.",
          "$ref": "#/$defs/GradientDirection"
        }
      },
      "required": [
        "colors",
        "direction"
      ]
    },
    "Delay": {
      "description": "Represents a delay time, which can be either a finite number or a null",
      "type": "integer",
      "format": "uint64",
      "minimum": 0
    },
    "Duration": {
      "description": "Represents a duration, which can be either a finite number (f32) or a non-empty string.",
      "oneOf": [
        {
          "type": "number",
          "description": "The speed of the animation (a numeric value)."
        },
        {
          "type": "string",
          "pattern": "^[\\d.]+(ms|s)$",
          "description": "The duration as a string, e.g., '3s' or '3ms'."
        }
      ]
    },
    "GlobalColor": {
      "description": "The `GlobalColor` enum represents a global color that can be either a color string (e.g., a hex color code or a color name)\n or a mapping to a gradient definition.",
      "anyOf": [
        {
          "description": "A string representing a color, which could be a hex color code or a color name.\n\n This variant is used for basic color definitions like `\"#FF5733\"` or `\"red\"`.",
          "type": "string"
        },
        {
          "description": "A mapping defining a gradient color.\n\n This variant is used when the color is a gradient and contains a `ColorMapping` to define the gradient's\n color stops, direction, and other properties.",
          "$ref": "#/$defs/ColorMapping"
        }
      ]
    },
    "GlobalRuleConfig": {
      "description": "Contains global configuration settings applied across all windows.",
      "type": "object",
      "not": {
        "$ref": "#/$defs/Alias"
      },
      "properties": {
        "active_color": {
          "description": "Default color for active window borders.",
          "$ref": "#/$defs/GlobalColor"
        },
        "animations": {
          "description": "Animation settings for borders.",
          "$ref": "#/$defs/AnimationsConfig"
        },
        "border_offset": {
          "description": "Default offset for the window borders.",
          "$ref": "#/$defs/BorderOffset",
          "default": -1
        },
        "border_style": {
          "description": "Default border radius settings.",
          "$ref": "#/$defs/BorderStyle"
        },
        "border_width": {
          "description": "Default width of the window borders.",
          "$ref": "#/$defs/BorderWidth",
          "default": 2
        },
        "inactive_color": {
          "description": "Default color for inactive window borders.",
          "$ref": "#/$defs/GlobalColor"
        },
        "initialize_delay": {
          "description": "Delay (in milliseconds) before applying borders after initialization.",
          "$ref": "#/$defs/Delay",
          "default": 250
        },
        "init_delay": {
          "description": "Delay (in milliseconds) before applying borders after initialization.",
          "$ref": "#/$defs/Delay",
          "default": 250
        },
        "unminimize_delay": {
          "description": "Delay (in milliseconds) before applying borders after unminimizing.",
          "$ref": "#/$defs/Delay",
          "default": 200
        },
        "restore_delay": {
          "description": "Delay (in milliseconds) before applying borders after unminimizing.",
          "$ref": "#/$defs/Delay",
          "default": 200
        }
      }
    },
    "GradientCoordinates": {
      "type": "object",
      "properties": {
        "end": {
          "description": "The [x, y] coordinates for the end point of the gradient.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "maxItems": 2,
          "minItems": 2
        },
        "start": {
          "description": "The [x, y] coordinates for the start point of the gradient.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "maxItems": 2,
          "minItems": 2
        }
      },
      "required": [
        "start",
        "end"
      ]
    },
    "GradientDirection": {
      "description": "Enum representing different types of gradient directions.\n It can either be a string describing the direction (e.g., \"to right\") or explicit coordinates for the gradient direction.",
      "anyOf": [
        {
          "description": "Direction is represented as a string (e.g., \"to right\").",
          "type": "string"
        },
        {
          "description": "Direction is represented as coordinates (e.g., GradientCoordinates).",
          "$ref": "#/$defs/GradientCoordinates"
        }
      ]
    },
    "Keybindings": {
      "type": "object",
      "properties": {
        "exit": {
          "type": "string",
          "description": "The keybinding used to close the app. Pressing this key will close 'tacky-borders'. (default: f10)",
          "default": "f10"
        },
        "open_config": {
          "type": "string",
          "description": "The keybinding used to open the configuration in editor. Pressing this key will open config for 'tacky-borders'. (default: f9)",
          "default": "f9"
        },
        "reload": {
          "type": "string",
          "description": "The keybinding used to reload the border. Pressing this key will refresh the border settings or appearance. (default: f8)",
          "default": "f8"
        }
      }
    },
    "MatchKind": {
      "description": "Specifies the type of match used for window identification.",
      "oneOf": [
        {
          "description": "Match based on the window title.",
          "type": "string",
          "const": "Title"
        },
        {
          "description": "Match based on the class name of the window.",
          "type": "string",
          "const": "Class"
        },
        {
          "description": "Match based on the process name or executable associated with the window.",
          "type": "string",
          "const": "Process"
        }
      ]
    },
    "MatchStrategy": {
      "description": "Defines the strategy for matching a value against a criterion.",
      "oneOf": [
        {
          "description": "Match values that are exactly equal.",
          "type": "string",
          "const": "Equals"
        },
        {
          "description": "Match values using a regular expression.",
          "type": "string",
          "const": "Regex"
        },
        {
          "description": "Match values that contain the specified substring.",
          "type": "string",
          "const": "Contains"
        }
      ]
    },
    "WindowMatchConfig": {
      "description": "Represents criteria used to match windows for applying specific configurations.",
      "type": "object",
      "not": {
        "$ref": "#/$defs/Alias"
      },
      "properties": {
        "active_color": {
          "description": "Color for the border when the window is active.",
          "anyOf": [
            {
              "$ref": "#/$defs/GlobalColor"
            },
            {
              "type": "null"
            }
          ]
        },
        "animations": {
          "description": "Animation settings for the window borders.",
          "anyOf": [
            {
              "$ref": "#/$defs/AnimationsConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "border_offset": {
          "description": "Offset of the border relative to the window.",
          "anyOf": [
            {
              "$ref": "#/$defs/BorderOffset"
            },
            {
              "type": "null"
            }
          ]
        },
        "border_style": {
          "description": "Radius of the border corners.",
          "anyOf": [
            {
              "$ref": "#/$defs/BorderStyle"
            },
            {
              "type": "null"
            }
          ]
        },
        "border_width": {
          "description": "Width of the border in pixels.",
          "anyOf": [
            {
              "$ref": "#/$defs/BorderWidth"
            },
            {
              "type": "null"
            }
          ]
        },
        "enabled": {
          "description": "Whether borders are enabled for this match.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "inactive_color": {
          "description": "Color for the border when the window is inactive.",
          "anyOf": [
            {
              "$ref": "#/$defs/GlobalColor"
            },
            {
              "type": "null"
            }
          ]
        },
        "initialize_delay": {
          "description": "Delay (in milliseconds) before applying the border after initialization.",
          "oneOf": [
            {
              "$ref": "#/$defs/Delay"
            },
            {
              "type": "null"
            }
          ]
        },
        "init_delay": {
          "description": "Delay (in milliseconds) before applying the border after initialization.",
          "oneOf": [
            {
              "$ref": "#/$defs/Delay"
            },
            {
              "type": "null"
            }
          ]
        },
        "kind": {
          "description": "Type of match (e.g., title, class, or process).",
          "anyOf": [
            {
              "$ref": "#/$defs/MatchKind"
            },
            {
              "type": "null"
            }
          ]
        },
        "strategy": {
          "description": "Strategy for matching, such as exact match or regex.",
          "anyOf": [
            {
              "$ref": "#/$defs/MatchStrategy"
            },
            {
              "type": "null"
            }
          ]
        },
        "unminimize_delay": {
          "description": "Delay (in milliseconds) before applying the border after unminimizing.",
          "oneOf": [
            {
              "$ref": "#/$defs/Delay"
            },
            {
              "type": "null"
            }
          ]
        },
        "restore_delay": {
          "description": "Delay (in milliseconds) before applying the border after unminimizing.",
          "oneOf": [
            {
              "$ref": "#/$defs/Delay"
            },
            {
              "type": "null"
            }
          ]
        },
        "value": {
          "description": "The value to match against (e.g., window title or class name).",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "WindowRuleConfig": {
      "description": "Represents a rule for a specific window, including matching criteria and associated actions.",
      "type": "object",
      "properties": {
        "match": {
          "description": "The matching details and settings for a specific type of window.",
          "$ref": "#/$defs/WindowMatchConfig"
        }
      },
      "required": [
        "match"
      ]
    }
  }
}
